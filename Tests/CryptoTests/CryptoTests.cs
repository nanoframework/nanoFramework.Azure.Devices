using nanoFramework.TestFramework;
using System;
using System.Security.Cryptography;

namespace CryptoTests
{
    [TestClass]
    public class CryptoTests
    {
        [TestMethod]
        public void HMACSHA256Test()
        {
            // Arrange
            var hashsha256 = new HMACSHA256(new byte[] { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x00, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F });
            byte[] buff = new byte[] { 0x01, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x77, 0x42, 0x01, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x77, 0x42, 0x01, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x77, 0x42 };
            byte[] expected = new byte[] { 0x20, 0xA9, 0xB8, 0x94, 0x64, 0xF2, 0xD3, 0xFE, 0x24, 0x25, 0x66, 0x5F, 0xF6, 0x72, 0xA1, 0x08, 0xB4, 0x70, 0x87, 0x2E, 0xF5, 0x91, 0x78, 0x04, 0x1A, 0xB8, 0x4E, 0xA7, 0x6D, 0x0E, 0x5A, 0xDD };
            // Act
            var res = hashsha256.ComputeHash(buff);

            // Assert
            CollectionAssert.AreEqual(expected, res);
        }

        [TestMethod]
        public void SHA256Test()
        {
            // Arrange
            var sha256 = SHA256.Create();
            byte[] buff = new byte[] { 0x01, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x77, 0x42, 0x01, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x77, 0x42, 0x01, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x77, 0x42 };
            byte[] expected = new byte[] { 0x3E, 0x9C, 0xC1, 0xD4, 0x7F, 0x32, 0xC1, 0x16, 0x31, 0x47, 0xDA, 0x32, 0xE6, 0x23, 0x54, 0xCF, 0x1C, 0x7A, 0x3A, 0x5B, 0xC0, 0x05, 0x07, 0x5C, 0x0C, 0xF8, 0x5D, 0x2E, 0xD3, 0x6F, 0xA7, 0x7D };

            // Act
            var res = sha256.ComputeHash(buff);

            // Assert
            CollectionAssert.AreEqual(expected, res);
        }
    }
}
